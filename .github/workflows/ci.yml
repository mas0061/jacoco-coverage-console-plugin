name: CI

on:
  pull_request:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 17, 21]
        gradle: [8.0, 8.14]
        exclude:
          # Java 8 is not supported by Gradle 8.x
          - java: 8
            gradle: 8.0
          - java: 8
            gradle: 8.14

    name: Test with Java ${{ matrix.java }} and Gradle ${{ matrix.gradle }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        # Fetch full history for better analysis
        fetch-depth: 0
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: ${{ matrix.java }}
        distribution: 'corretto'
    
    - name: Setup Gradle ${{ matrix.gradle }}
      uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v4.4.0
      with:
        gradle-version: ${{ matrix.gradle }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run quality checks and tests
      run: ./gradlew qualityCheck test jacocoTestReport --continue
    
    - name: Upload test reports
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: test-reports-java${{ matrix.java }}-gradle${{ matrix.gradle }}
        path: |
          build/reports/ktlint/
          build/reports/detekt/
          build/reports/jacoco/
          build/reports/tests/test/
        retention-days: ${{ matrix.java == 17 && matrix.gradle == '8.14' && 30 || 7 }}
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
      if: always()
      with:
        files: build/test-results/test/*.xml
        check_name: "Test Results (Java ${{ matrix.java }}, Gradle ${{ matrix.gradle }})"

    - name: Generate coverage summary
      if: always() && matrix.java == 17 && matrix.gradle == '8.14'
      run: |
        if [ -f "build/reports/jacoco/test/jacocoTestReport.xml" ]; then
          echo "COVERAGE_REPORT_EXISTS=true" >> $GITHUB_ENV
          # Extract coverage percentage from JaCoCo XML report
          COVERAGE=$(grep -o 'missed="[0-9]*".*covered="[0-9]*"' build/reports/jacoco/test/jacocoTestReport.xml | head -1 | sed 's/missed="\([0-9]*\)".*covered="\([0-9]*\)"/\1 \2/' | awk '{total=$1+$2; if(total>0) print ($2*100/total); else print 0}')
          echo "COVERAGE_PERCENTAGE=${COVERAGE}" >> $GITHUB_ENV
        else
          echo "COVERAGE_REPORT_EXISTS=false" >> $GITHUB_ENV
        fi
    
    - name: Comment PR with quality results
      if: github.event_name == 'pull_request' && always() && matrix.java == 17 && matrix.gradle == '8.14'
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## 🔍 Code Quality Report\n\n';
          
          // Check detekt results
          try {
            const detektReport = fs.readFileSync('build/reports/detekt/detekt.txt', 'utf8');
            const issueCount = (detektReport.match(/Issues found:/g) || []).length;
            if (issueCount > 0) {
              comment += '❌ **detekt:** Issues found\n';
            } else {
              comment += '✅ **detekt:** No issues found\n';
            }
          } catch (e) {
            comment += '⚠️ **detekt:** Report not found\n';
          }
          
          // Check ktlint results
          comment += '✅ **ktlint:** Code style check completed\n';
          
          // Add coverage info if available
          const coverageExists = process.env.COVERAGE_REPORT_EXISTS === 'true';
          if (coverageExists) {
            const coverage = parseFloat(process.env.COVERAGE_PERCENTAGE || '0').toFixed(1);
            comment += `📊 **Test Coverage:** ${coverage}%\n`;
          }
          
          comment += '\n📁 **Artifacts uploaded:**\n';
          comment += '- Quality reports (ktlint, detekt)\n';
          if (coverageExists) {
            comment += '- Test coverage reports\n';
          }
          comment += '- Test results\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
